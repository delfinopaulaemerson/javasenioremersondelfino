package br.com.emape.dao;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;

import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;

import br.com.emape.model.Endereco;
/**
 * 
 * @author emerson
 *
 */
@Component("enderecoDAO")
public class EnderecoDAO{
	
			@PersistenceContext
	private EntityManager entityManager;
			/**
			 * metodo retorna o obejeto endereco
			 * @param id
			 * @return Endereco
			 */
			@Transactional(propagation = Propagation.REQUIRED, rollbackFor = { Exception.class })
			public List<Endereco> findContratante(Long id)throws Exception{
				
				 List<Endereco> enderecos = new ArrayList<Endereco>();
				
				
					enderecos = (List<Endereco>) this.entityManager.createQuery(" select e from Endereco e where contratante.id=:id ").setParameter("id", id).getResultList();
			
				
				return enderecos;
			}
			
			/**
			 * resu
			 * @param id
			 * @return
			 */
			@Transactional(propagation = Propagation.REQUIRED, rollbackFor = { Exception.class })
			public Endereco findContratada(Long id){
				
				Endereco endereco = (Endereco) this.entityManager.createQuery(" select e from Endereco e where contratada.id=:id ").setParameter("id", id).getSingleResult();
				
				return endereco;
			}


			public EntityManager getEntityManager() {
				return entityManager;
			}

			public void setEntityManager(EntityManager entityManager) {
				this.entityManager = entityManager;
			}
			
			
			
			

}
